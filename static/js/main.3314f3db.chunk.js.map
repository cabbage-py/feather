{"version":3,"sources":["components/Header.js","components/Intro.js","components/Main.js","components/About.js","components/Projects.js","theme.js","global.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","bg","onClick","props","toggleTheme","setState","className","style","header","Navbar","this","variant","expand","sticky","Brand","type","Toggle","aria-controls","Collapse","id","Nav","Link","href","target","rel","icon","faLinkedin","size","faGithub","Component","padding","position","width","left","zIndex","Intro","Fragment","mainText","introText","welcomeText","fontSize","textAlign","marginLeft","animation","fontWeight","Main","About","Projects","projectHeader","temp","lightTheme","body","text","toggleBorder","gradient","backgroundColor","darkTheme","GlobalStyles","createGlobalStyle","theme","App","vantaEffect","setOptions","vantaRef","React","createRef","BIRDS","el","current","color1","color2","colorMode","separation","quantity","wingSpan","speedLimit","destroy","ref","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3314f3db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGithub,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport class Header extends Component {\r\n  state = {\r\n    bg: \"light\",\r\n  };\r\n\r\n  onClick = () => {\r\n    this.props.toggleTheme();\r\n    this.setState((state) => ({\r\n      bg: state.bg === \"light\" ? \"dark\" : \"light\",\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-header\" style={header}>\r\n        <>\r\n          <Navbar\r\n            bg={this.state.bg}\r\n            variant={this.state.bg}\r\n            expand=\"sm\"\r\n            sticky=\"top\"\r\n          >\r\n            <Navbar.Brand>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" onClick={this.onClick} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/feather/\">Home</Nav.Link>\r\n                <Nav.Link href=\"/feather/about\">About</Nav.Link>\r\n                <Nav.Link href=\"/feather/projects\">Projects</Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link>My Links:</Nav.Link>\r\n                <Nav.Link\r\n                  href=\"https://www.linkedin.com/in/danj/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  href=\"https://github.com/cabbage-py\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst header = {\r\n  padding: \"calc( 7px + (9 - 7) * (100vw - 400px)/(800-400) )\",\r\n  position: \"fixed\",\r\n  width: \"100vw\",\r\n  left: 0,\r\n  zIndex: 2,\r\n};\r\n\r\nHeader.propTypes = {\r\n  toggleTheme: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Intro extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n              <h1 style={mainText}>Hi.</h1>\r\n              <p style={introText}>\r\n                I'm Dan Jiang, a Software Engineering student.\r\n              </p>\r\n              <p style={welcomeText}>Welcome to my site.</p>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mainText = {\r\n  fontSize: \"calc( 100px + (150 - 100) * (100vw - 400px)/(800-400) )\",\r\n  textAlign: \"left\",\r\n  marginLeft: \"-0.07em\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst introText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 20px + (25 - 20) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein2 5s\",\r\n};\r\n\r\nconst welcomeText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 22px + (28 - 22) * (100vw - 400px)/(800-400) )\",\r\n  fontWeight: \"bold\",\r\n  animation: \"fadein3 5s\",\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport Intro from \"./Intro\";\r\n\r\nexport class Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n            <div className=\"inner\">\r\n              <Intro/>\r\n            </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"App-header\">\r\n          <div className=\"inner\"></div>\r\n          <div className=\"container-custom\">\r\n            <div className=\"row h-100 w-100\">\r\n              <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 col-lg-8 offset-lg-2 my-auto\">\r\n                <h1 style={mainText}>A short word:</h1>\r\n                <div style={introText}>\r\n                  Hey there, welcome to my page!\r\n                  <br />\r\n                  <br />\r\n                  This page is just something small I made while exploring\r\n                  front-end technologies.\r\n                  <br />\r\n                  <br />\r\n                  Feel free to message me on LinkedIn for any opportunities!\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mainText = {\r\n  fontSize: \"calc( 50px + (80 - 50) * (100vw - 400px)/(800-400) )\",\r\n  textAlign: \"left\",\r\n  marginLeft: \"-0.07em\",\r\n};\r\n\r\nconst introText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 17px + (20 - 17) * (100vw - 400px)/(800-400) )\",\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Projects extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n\r\n                <h1 style={projectHeader}>My Projects</h1>\r\n                <p style={temp}>(this page is still a work in progress)</p>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst projectHeader = {\r\n  padding: \"1.2em 0em\",\r\n  fontSize: \"calc( 40px + (50 - 40) * (100vw - 400px)/(800-400) )\",\r\n};\r\n\r\nconst temp = {\r\n  fontSize: \"calc( 22px + (25 - 22) * (100vw - 400px)/(800-400) )\"\r\n}\r\n\r\nexport default Projects;\r\n","export const lightTheme = {\r\n    body: 'white',\r\n    text: 'black',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  }\r\n  \r\nexport const darkTheme = {\r\n    body: '#282c34',\r\n    text: 'white',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n    backgroundColor: \"rgba(255, 255, 255, 0.0)\",\r\n    }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .App-header {\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .vanta-canvas {\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .button {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .button span:after {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  \r\n  .button:hover span {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .btn {\r\n    flex: \"1\" ,\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .projectHeader {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .backBtn {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .todoItem {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .about-background {\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n`\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport BIRDS from 'vanta/dist/vanta.birds.min';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport About from \"./components/About\";\r\nimport Projects from \"./components/Projects\";\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\n\r\n\r\nexport class App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.vantaRef = React.createRef()\r\n    this.state = {\r\n      theme: \"light\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.vantaEffect = BIRDS({\r\n      el: this.vantaRef.current,\r\n      color1: 0xffc3f1,\r\n      color2: 0xb837ff,\r\n      colorMode: \"lerpGradient\",\r\n      separation: 50.00,\r\n      quantity: 4.00,\r\n      backgroundColor: this.state.theme === 'light' ? 0xffffff : 0x90909,\r\n      wingSpan: 1,\r\n      speedLimit: 4\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.vantaEffect) this.vantaEffect.destroy()\r\n  }\r\n\r\n\r\n  // App.js\r\n  state = {\r\n    theme: \"light\"\r\n  };\r\n\r\n  // The function that toggles between themes\r\n  toggleTheme = () => {\r\n    // if the theme is not light, then set it to dark\r\n    if (this.state.theme === 'light') {\r\n      this.setState({ theme: \"dark\" });\r\n      this.vantaEffect.setOptions({backgroundColor: 0x90909});\r\n    // otherwise, it should be light\r\n    } else {\r\n      this.setState({ theme: \"light\" });\r\n      this.vantaEffect.setOptions({backgroundColor: 0xffffff});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <ThemeProvider theme={this.state.theme === 'light' ? lightTheme : darkTheme}>\r\n          <GlobalStyles/>\r\n          <div ref={this.vantaRef} className=\"App\">\r\n            <Header toggleTheme={this.toggleTheme}/>\r\n            <Route exact path=\"/feather\" component={Main} />\r\n            <Route path=\"/feather/about\" component={About} />\r\n            <Route path=\"/feather/projects\" component={Projects} />\r\n          </div>\r\n        </ThemeProvider>\r\n    </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}