{"version":3,"sources":["components/Header.js","components/Intro.js","components/Main.js","components/About.js","components/Projects.js","actions/actions.js","components/todolist/AddTodo.js","components/todolist/TodoItem.js","components/todolist/EditTodo.js","components/todolist/Todos.js","containers/TodoContainer.js","components/Todo.js","theme.js","global.js","App.js","serviceWorker.js","reducers/todoReducer.js","store.js","index.js"],"names":["Header","state","bg","onClick","props","toggleTheme","setState","className","style","header","Navbar","this","variant","expand","sticky","Brand","type","Toggle","aria-controls","Collapse","id","Nav","Link","to","NavDropdown","title","Item","fontWeight","href","target","rel","icon","faLinkedin","size","faGithub","Component","padding","position","width","left","zIndex","Intro","Fragment","mainText","introText","welcomeText","fontSize","textAlign","marginLeft","animation","Main","About","Projects","projectHeader","temp","addTodo","payload","formStyle","connect","input","dispatch","onSubmit","e","preventDefault","value","trim","float","display","overflow","placeholder","ref","node","checkbox","cursor","verticalAlign","todoText","whiteSpace","wordBreak","btnDelete","color","backgroundColor","border","borderLeft","top","right","height","todo","toggleTodo","removeTodo","toggleEdit","textDecoration","completed","paddingLeft","paddingRight","showEdit","todoBorder","margin","flexDirection","todos","map","toggleComplete","Todos","Todo","TodoContainer","paddingTop","lightTheme","body","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","App","vantaEffect","setOptions","vantaRef","React","createRef","BIRDS","el","current","color1","color2","colorMode","separation","quantity","wingSpan","speedLimit","destroy","exact","path","component","Boolean","window","location","hostname","match","todoId","store","createStore","action","filter","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23cccbdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport class Header extends Component {\r\n  state = {\r\n    bg: \"light\",\r\n  };\r\n\r\n  onClick = () => {\r\n    this.props.toggleTheme();\r\n    this.setState((state) => ({\r\n      bg: state.bg === \"light\" ? \"dark\" : \"light\",\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-header\" style={header}>\r\n        <>\r\n          <Navbar\r\n            bg={this.state.bg}\r\n            variant={this.state.bg}\r\n            expand=\"sm\"\r\n            sticky=\"top\"\r\n          >\r\n            <Navbar.Brand>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" onClick={this.onClick} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link>\r\n                  {\" \"}\r\n                  <Link to={\"/feather/\"}>Home</Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  {\" \"}\r\n                  <Link to={\"/feather/about\"}>About</Link>\r\n                </Nav.Link>\r\n                \r\n                <NavDropdown title=\"Projects\" id=\"basic-nav-dropdown\">\r\n                  <NavDropdown.Item>\r\n                    {\" \"}\r\n                    <Link to={\"/feather/projects\"}><span style={{fontWeight: \"bold\"}}>Overview</span></Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                  {\" \"}\r\n                  <Link to={\"/feather/todolist\"}>Todo-List</Link>\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link>My Links:</Nav.Link>\r\n                <Nav.Link\r\n                  href=\"https://www.linkedin.com/in/danj/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  href=\"https://github.com/cabbage-py\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst header = {\r\n  padding: \"calc( 7px + (9 - 7) * (100vw - 400px)/(800-400) )\",\r\n  position: \"fixed\",\r\n  width: \"100vw\",\r\n  left: 0,\r\n  zIndex: 2,\r\n};\r\n\r\nHeader.propTypes = {\r\n  toggleTheme: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Intro extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n              <h1 style={mainText}>Hi.</h1>\r\n              <p style={introText}>\r\n                I'm Dan Jiang, a Software Engineering student.\r\n              </p>\r\n              <p style={welcomeText}>Welcome to my site.</p>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mainText = {\r\n  fontSize: \"calc( 100px + (150 - 100) * (100vw - 400px)/(800-400) )\",\r\n  textAlign: \"left\",\r\n  marginLeft: \"-0.07em\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst introText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 20px + (25 - 20) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein2 5s\",\r\n};\r\n\r\nconst welcomeText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 22px + (28 - 22) * (100vw - 400px)/(800-400) )\",\r\n  fontWeight: \"bold\",\r\n  animation: \"fadein3 5s\",\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport Intro from \"./Intro\";\r\n\r\nexport class Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n            <div className=\"inner\">\r\n              <Intro/>\r\n            </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"App-header\">\r\n          <div className=\"inner\"></div>\r\n          <div className=\"container-custom\">\r\n            <div className=\"row h-100 w-100\">\r\n              <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 col-lg-8 offset-lg-2 my-auto\">\r\n                <h1 style={mainText}>A short word:</h1>\r\n                <div style={introText}>\r\n                  Hey there, welcome to my page!\r\n                  <br />\r\n                  <br />\r\n                  This page is just something small I made while exploring\r\n                  front-end technologies.\r\n                  <br />\r\n                  <br />\r\n                  Feel free to message me on LinkedIn for any opportunities!\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mainText = {\r\n  fontSize: \"calc( 50px + (80 - 50) * (100vw - 400px)/(800-400) )\",\r\n  textAlign: \"left\",\r\n  marginLeft: \"-0.07em\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst introText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 17px + (20 - 17) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Projects extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n\r\n                <h1 style={projectHeader} className=\"projectHeader\">My Projects</h1>\r\n                <p style={temp} className=\"projectHeader\">(this page is still a work in progress)</p>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst projectHeader = {\r\n  padding: \"1.2em 0em\",\r\n  fontSize: \"calc( 40px + (50 - 40) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst temp = {\r\n  fontSize: \"calc( 22px + (25 - 22) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein1 5s\",\r\n}\r\n\r\nexport default Projects;\r\n","export const addTodo = (title) => ({\r\n    type: \"ADD_TODO\",\r\n    payload: {\r\n        title\r\n    }\r\n});\r\n\r\nexport const removeTodo = (id) => ({\r\n    type: \"REMOVE_TODO\",\r\n    payload: {\r\n        id\r\n    }\r\n});\r\n\r\nexport const editTodo = (id, title) => ({\r\n    type: \"EDIT_TODO\",\r\n    payload: {\r\n        id,\r\n        title\r\n    }\r\n})\r\n\r\nexport const toggleComplete = (id) => ({\r\n    type: \"TOGGLE_COMPLETE\",\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const toggleEdit = (id) => ({\r\n    type: \"TOGGLE_EDIT\",\r\n    payload: {\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../../actions/actions\";\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input;\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <form\r\n      style={formStyle}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (!input.value.trim()) {\r\n          return;\r\n        }\r\n        dispatch(addTodo(input.value));\r\n        input.value = \"\";\r\n      }}\r\n    >\r\n      <button style={{float: \"right\"}} type=\"submit\">Submit</button>\r\n      <span style={{display: \"block\", overflow: \"hidden\"}}>\r\n        <input style={{width: \"100%\"}} placeholder=\"Add Todo Here\" ref={(node) => (input = node)} />\r\n      </span>\r\n      \r\n    </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst formStyle = {\r\n  animation: \"fadein1 5s\",\r\n}\r\n\r\nexport default connect()(AddTodo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TodoItem = ({ todo, toggleTodo, removeTodo, toggleEdit }) => {\r\n  return (\r\n    <div style={{ textDecoration: todo.completed ? \"line-through\" : \"none\" }}>\r\n      <div style={{float: \"left\"}}>\r\n      <input style={checkbox} type=\"checkbox\" onClick={toggleTodo} />\r\n</div>\r\n      <div style={{paddingLeft: \"10px\", paddingRight: \"60px\"}}>\r\n      <p style={todoText} onClick={toggleEdit}>\r\n        {todo.title}\r\n      </p>\r\n      </div>\r\n\r\n      <button style={btnDelete} onClick={removeTodo}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst checkbox = {\r\n  cursor: \"pointer\",\r\n  display: \"inline\",\r\n  verticalAlign: \"center\",\r\n}\r\n\r\nconst todoText = {\r\n  display: \"inline\",\r\n  cursor: \"pointer\",\r\n  width: \"80%\",\r\n  whiteSpace: \"normal\",\r\n  wordBreak: \"break-all\",\r\n}\r\n\r\nconst btnDelete = {\r\n  color: \"#ff0000\",\r\n  backgroundColor: \"Transparent\",\r\n  border: \"none\",\r\n  borderLeft: \"2px #ccc solid\",\r\n  position: \"absolute\",\r\n  top: \"0\",\r\n  right: \"0\",\r\n  height: \"100%\",\r\n  cursor: \"pointer\",\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    showEdit: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  toggleEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect()(TodoItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { editTodo } from \"../../actions/actions\";\r\n\r\nconst EditTodo = ({ dispatch, todo }) => {\r\n  let input;\r\n\r\n  return (\r\n    <form\r\n      className=\"form-edit\"\r\n      style={{ display: todo.showEdit ? \"block\" : \"none\" }}\r\n    >\r\n      <input\r\n        placeholder=\"Type new Todo here\"\r\n        ref={(node) => (input = node)}\r\n      ></input>\r\n\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          if (!input.value.trim()) {\r\n            return;\r\n          }\r\n          dispatch(editTodo(todo.id, input.value));\r\n          input.value = \"\";\r\n        }}\r\n      >\r\n        Edit Todo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nEditTodo.propTypes = {\r\n  todo: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    showEdit: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default connect()(EditTodo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst Todos = ({ todos, toggleTodo, removeTodo, toggleEdit }) => {\r\n  return todos.map((todo) => (\r\n    <div className=\"todo-item\" style={todoBorder}>\r\n      <TodoItem\r\n        todo={todo}\r\n        toggleTodo={() => toggleTodo(todo.id)}\r\n        removeTodo={() => removeTodo(todo.id)}\r\n        toggleEdit={() => toggleEdit(todo.id)}\r\n      />\r\n      <EditTodo todo={todo} />\r\n    </div>\r\n  ));\r\n};\r\n\r\nconst todoBorder = {\r\n  border: \"2px #ccc solid\",\r\n  padding: \"10px\",\r\n  margin: \"10px 0px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  position: \"relative\",\r\n  animation: \"fadein1 5s\",\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n    }).isRequired\r\n  ),\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  toggleEdit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect()(Todos);\r\n","import { connect } from \"react-redux\";\r\nimport Todos from \"../components/todolist/Todos\";\r\nimport { toggleComplete, removeTodo, toggleEdit } from \"../actions/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTodo: (id) => dispatch(toggleComplete(id)),\r\n  removeTodo: (id) => dispatch(removeTodo(id)),\r\n  toggleEdit: (id) => dispatch(toggleEdit(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import React, { Component } from \"react\";\r\n\r\nimport AddTodo from \"./todolist/AddTodo\";\r\nimport TodoContainer from \"../containers/TodoContainer\"\r\n\r\nexport class Todo extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"App-header\">\r\n          <div className=\"inner\"></div>\r\n          <div className=\"container-custom\">\r\n            <div className=\"row h-100 w-100\">\r\n              <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                <h1 style={projectHeader}>Todolist</h1>\r\n                <p style={temp}>A basic todo-list, made with Redux</p>\r\n                <AddTodo/>\r\n                <TodoContainer/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst projectHeader = {\r\n  paddingTop: \"1.2em\",\r\n  fontSize: \"calc( 40px + (50 - 40) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst temp = {\r\n  fontSize: \"calc( 22px + (25 - 22) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein1 5s\",\r\n}\r\n\r\nexport default Todo;\r\n","export const lightTheme = {\r\n    body: 'white',\r\n    text: 'black',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  }\r\n  \r\nexport const darkTheme = {\r\n    body: '#282c34',\r\n    text: 'white',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .App-header {\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .vanta-canvas {\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .button {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .button span:after {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  \r\n  .button:hover span {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .btn {\r\n    flex: \"1\" ,\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .projectHeader {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .todo-item {\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n`\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport BIRDS from 'vanta/dist/vanta.birds.min';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport About from \"./components/About\";\r\nimport Projects from \"./components/Projects\";\r\nimport Todo from \"./components/Todo\";\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './theme';\r\nimport { GlobalStyles } from './global';\r\n\r\n\r\nexport class App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.vantaRef = React.createRef()\r\n    this.state = {\r\n      theme: \"light\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.vantaEffect = BIRDS({\r\n      el: this.vantaRef.current,\r\n      color1: 0xffc3f1,\r\n      color2: 0xb837ff,\r\n      colorMode: \"lerpGradient\",\r\n      separation: 50.00,\r\n      quantity: 4.00,\r\n      backgroundColor: this.state.theme === 'light' ? 0xffffff : 0x90909,\r\n      wingSpan: 1,\r\n      speedLimit: 4\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.vantaEffect) this.vantaEffect.destroy()\r\n  }\r\n\r\n\r\n  // App.js\r\n  state = {\r\n    theme: \"light\"\r\n  };\r\n\r\n  // The function that toggles between themes\r\n  toggleTheme = () => {\r\n    // if the theme is not light, then set it to dark\r\n    if (this.state.theme === 'light') {\r\n      this.setState({ theme: \"dark\" });\r\n      this.vantaEffect.setOptions({backgroundColor: 0x90909});\r\n    // otherwise, it should be light\r\n    } else {\r\n      this.setState({ theme: \"light\" });\r\n      this.vantaEffect.setOptions({backgroundColor: 0xffffff});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <ThemeProvider theme={this.state.theme === 'light' ? lightTheme : darkTheme}>\r\n          <GlobalStyles/>\r\n          <div ref={this.vantaRef} className=\"App\">\r\n            <Header toggleTheme={this.toggleTheme}/>\r\n            <Route exact path=\"/feather\" component={Main} />\r\n            <Route path=\"/feather/about\" component={About} />\r\n            <Route path=\"/feather/projects\" component={Projects} />\r\n            <Route path=\"/feather/todolist\" component={Todo} />\r\n          </div>\r\n        </ThemeProvider>\r\n    </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let todoId = 0;\r\n\r\nexport default function todoReducer(state = [], action) {\r\n    switch(action.type){\r\n        case \"ADD_TODO\":\r\n            return [\r\n                {\r\n                    id: todoId++,\r\n                    title: action.payload.title,\r\n                    completed: false,\r\n                    showEdit: false\r\n                },\r\n                ...state\r\n            ];\r\n        \r\n        case \"REMOVE_TODO\":\r\n            return state.filter(todo => todo.id !== action.payload.id);\r\n\r\n        case \"EDIT_TODO\":\r\n            return state.map(todo => todo.id !== action.payload.id ? todo : {...todo, title: action.payload.title})\r\n\r\n        case \"TOGGLE_COMPLETE\":\r\n            return state.map(todo => todo.id !== action.payload.id ? todo : {...todo, completed: !todo.completed})\r\n\r\n        case \"TOGGLE_EDIT\":\r\n            return state.map(todo => todo.id !== action.payload.id ? todo : {...todo, showEdit: !todo.showEdit})\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport todoReducer from './reducers/todoReducer';\r\n\r\nconst store = createStore(todoReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport { addTodo} from \"./actions/actions\";\r\n\r\nstore.dispatch(addTodo(\"Task 1 (Try clicking me!)\"))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}