{"version":3,"sources":["components/Header.js","components/Intro.js","components/About.js","components/Projects.js","components/Main.js","theme.js","global.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","header","type","onClick","this","props","toggleTheme","Component","padding","position","width","left","zIndex","Intro","toAbout","Fragment","mainText","introText","welcomeText","href","target","rel","icon","faLinkedin","size","iconStyle","faGithub","buttonStyle","fontSize","textAlign","marginLeft","animation","fontWeight","border","outline","float","About","toProjects","Projects","projectHeader","temp","Main","scrollToAbout","window","scrollTo","behavior","innerWidth","scrollToProject","lightTheme","body","text","toggleBorder","gradient","backgroundColor","darkTheme","GlobalStyles","createGlobalStyle","theme","App","state","setState","vantaEffect","setOptions","vantaRef","React","createRef","BIRDS","el","current","color1","color2","colorMode","separation","quantity","wingSpan","speedLimit","destroy","ref","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60d0078f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-header\" style={ header }>\r\n                <div>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" onClick={this.props.toggleTheme}/>\r\n                        <span className=\"slider\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst header = {\r\n    padding: \"calc( 7px + (9 - 7) * (100vw - 400px)/(800-400) )\",\r\n    position: \"fixed\",\r\n    width: \"100vw\",\r\n    left: 0,\r\n    zIndex: 2\r\n  };\r\n\r\n\r\nHeader.propTypes = {\r\n    toggleTheme: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default Header\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default class Intro extends Component {\r\n\r\n    toAbout = () => {\r\n        this.props.toAbout()\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n              <h1 style={mainText}>Hi.</h1>\r\n              <p style={introText}>\r\n                I'm Dan Jiang, a Software Engineering student.\r\n              </p>\r\n              <p style={welcomeText}>Welcome to my site.</p>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/danj/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faLinkedin}\r\n                  size=\"3x\"\r\n                  style={iconStyle}\r\n                />\r\n              </a>\r\n              <a\r\n                href=\"https://github.com/cabbage-py\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <FontAwesomeIcon icon={faGithub} size=\"3x\" style={iconStyle} />\r\n              </a>\r\n              <br></br>\r\n              <button\r\n                className=\"button\"\r\n                style={buttonStyle}\r\n                onClick={this.toAbout}\r\n              >\r\n                <span>About me</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mainText = {\r\n  fontSize: \"calc( 100px + (150 - 100) * (100vw - 400px)/(800-400) )\",\r\n  textAlign: \"left\",\r\n  marginLeft: \"-0.07em\",\r\n  animation: \"fadein1 5s\",\r\n};\r\n\r\nconst introText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 20px + (25 - 20) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein2 5s\",\r\n};\r\n\r\nconst welcomeText = {\r\n  textAlign: \"left\",\r\n  fontSize: \"calc( 22px + (28 - 22) * (100vw - 400px)/(800-400) )\",\r\n  fontWeight: \"bold\",\r\n  animation: \"fadein3 5s\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  fontSize: \"calc( 15px + (17 - 15) * (100vw - 400px)/(800-400) )\",\r\n  animation: \"fadein4 5s\",\r\n  border: \"none\",\r\n  outline: \"none\"\r\n};\r\n\r\nconst iconStyle = {\r\n  float: \"left\",\r\n  padding: \"5px\",\r\n  animation: \"fadein4 5s\",\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n\r\n    toProjects = () => {\r\n        this.props.toProjects()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-custom\">\r\n                    <div className=\"row h-100 w-100\">\r\n                        <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n                            <div className=\"about-background\">\r\n                                <h1 style={mainText}>About me:</h1>\r\n                                <div style={introText}>\r\n                                    Name: Dan Jiang\r\n                                    <br/>\r\n                                    Age: 22\r\n                                    <br/>\r\n                                    Education: Masters of Software Engineering, Penultimate Year\r\n                                    <br/>\r\n                                    Hotel: Trivago\r\n                                    <br/> <br/>\r\n                                    <b>Cool Dan facts: </b>\r\n                                    <ul>\r\n                                        <li>Dan isn't short for Daniel or Danjamin</li>\r\n                                        <li>I can burp on command (don't ask)</li>\r\n                                        <li>I can't think of any more cool facts</li>\r\n                                    </ul>\r\n                                    </div>\r\n                            </div>\r\n                            <button\r\n                                className=\"button\"\r\n                                style={buttonStyle}\r\n                                onClick={this.toProjects}\r\n                            >\r\n                                {\" \"}\r\n                                <span>My Projects</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mainText = {\r\n    fontSize: \"calc( 50px + (80 - 50) * (100vw - 400px)/(800-400) )\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"-0.07em\",\r\n  };\r\n  \r\n  const introText = {\r\n    textAlign: \"left\",\r\n    fontSize: \"calc( 17px + (20 - 17) * (100vw - 400px)/(800-400) )\",\r\n  };\r\n  \r\n  const buttonStyle = {\r\n    fontSize: \"calc( 15px + (17 - 15) * (100vw - 400px)/(800-400) )\",\r\n    border: \"none\",\r\n    outline: \"none\"\r\n  };","import React, { Component } from \"react\";\r\n\r\nexport class Projects extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-custom\">\r\n          <div className=\"row h-100 w-100\">\r\n            <div className=\"col-10 offset-1 col-sm-10 offset-1 col-md-6 offset-md-3 my-auto\">\r\n\r\n                <h1 style={projectHeader}>My Projects</h1>\r\n                <p style={temp}>(this page is still a work in progress</p>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst projectHeader = {\r\n  padding: \"1.2em 0em\",\r\n  fontSize: \"calc( 40px + (50 - 40) * (100vw - 400px)/(800-400) )\",\r\n};\r\n\r\nconst temp = {\r\n  fontSize: \"calc( 22px + (25 - 22) * (100vw - 400px)/(800-400) )\"\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Intro from \"./Intro\";\r\nimport About from \"./About\";\r\nimport Projects from \"./Projects\";\r\n\r\nexport class Main extends Component {\r\n\r\n scrollToAbout = () => {\r\n  window.scrollTo({\r\n    behavior: \"smooth\",\r\n    left: window.innerWidth\r\n  });\r\n}\r\n\r\nscrollToProject = () => {\r\n  window.scrollTo({\r\n    behavior: \"smooth\",\r\n    left: ( window.innerWidth * 2 )\r\n  });\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <div className=\"inner\">\r\n            <Intro toAbout={this.scrollToAbout}/>\r\n            <About toProjects={this.scrollToProject}/>\r\n            <Projects/>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","export const lightTheme = {\r\n    body: 'white',\r\n    text: 'black',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\"\r\n  }\r\n  \r\nexport const darkTheme = {\r\n    body: '#282c34',\r\n    text: 'white',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n    backgroundColor: \"rgba(255, 255, 255, 0.0)\",\r\n    }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .App-header {\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .vanta-canvas {\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .button {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .button span:after {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  \r\n  .button:hover span {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .btn {\r\n    flex: \"1\" ,\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .projectHeader {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .backBtn {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .todoItem {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  .about-background {\r\n    background-color: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n`\r\n\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport BIRDS from 'vanta/dist/vanta.birds.min';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Projects from \"./components/Projects\";\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\n\n\nexport class App extends Component {\n  constructor() {\n    super()\n    this.vantaRef = React.createRef()\n    this.state = {\n      theme: \"light\"\n    };\n  }\n\n  componentDidMount() {\n    this.vantaEffect = BIRDS({\n      el: this.vantaRef.current,\n      color1: 0xffc3f1,\n      color2: 0xb837ff,\n      colorMode: \"lerpGradient\",\n      separation: 70.00,\n      quantity: 7.00,\n      backgroundColor: this.state.theme === 'light' ? 0xffffff : 0x90909,\n      wingSpan: 1,\n      speedLimit: 4\n    })\n  }\n\n  componentWillUnmount() {\n    if (this.vantaEffect) this.vantaEffect.destroy()\n  }\n\n\n  // App.js\n  state = {\n    theme: \"light\"\n  };\n\n  // The function that toggles between themes\n  toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (this.state.theme === 'light') {\n      this.setState({ theme: \"dark\" });\n      this.vantaEffect.setOptions({backgroundColor: 0x90909});\n    // otherwise, it should be light\n    } else {\n      this.setState({ theme: \"light\" });\n      this.vantaEffect.setOptions({backgroundColor: 0xffffff});\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <ThemeProvider theme={this.state.theme === 'light' ? lightTheme : darkTheme}>\n          <GlobalStyles/>\n          <div ref={this.vantaRef} className=\"App\">\n            <Header toggleTheme={this.toggleTheme}/>\n            <Route exact path=\"/feather\" component={Main} />\n            <Route path=\"/feather/projects\" component={Projects} />\n          </div>\n        </ThemeProvider>\n    </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}